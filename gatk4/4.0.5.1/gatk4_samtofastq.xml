<tool id="gatk4_auto_samtofastq" name="GATK4 SamToFastq (Picard)" profile="17.09" version="@WRAPPER_VERSION@0">
  <description>- Converts a SAM or BAM file to FASTQ.</description>
  <macros>
    <import>macros_1.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="version_cmd"/>
  <command detect_errors="exit_code"><![CDATA[
#include source=$bam_index#
gatk --java-options "-Xmx48g -Xms2g" SamToFastq
#if $optional.CLIPPING_ACTION
--CLIPPING_ACTION $optional.CLIPPING_ACTION
#end if
#if $optional.CLIPPING_ATTRIBUTE
--CLIPPING_ATTRIBUTE $optional.CLIPPING_ATTRIBUTE
#end if
#if $optional.CLIPPING_MIN_LENGTH
--CLIPPING_MIN_LENGTH $optional.CLIPPING_MIN_LENGTH
#end if
#if $optional.COMPRESS_OUTPUTS_PER_RG
$optional.COMPRESS_OUTPUTS_PER_RG
#end if

--FASTQ $FASTQ

#if $optional.INCLUDE_NON_PF_READS
$optional.INCLUDE_NON_PF_READS
#end if
#if $optional.INCLUDE_NON_PRIMARY_ALIGNMENTS
$optional.INCLUDE_NON_PRIMARY_ALIGNMENTS
#end if
#if $optional.INTERLEAVE
$optional.INTERLEAVE
#end if

#if $optional.OUTPUT_DIR
--OUTPUT_DIR $optional.OUTPUT_DIR
#end if
#if $optional.OUTPUT_PER_RG
$optional.OUTPUT_PER_RG
#end if
#if $optional.QUALITY
--QUALITY $optional.QUALITY
#end if

#if $optional.RE_REVERSE
$optional.RE_REVERSE
#end if
#if $optional.READ1_MAX_BASES_TO_WRITE
--READ1_MAX_BASES_TO_WRITE $optional.READ1_MAX_BASES_TO_WRITE
#end if
#if $optional.READ1_TRIM
--READ1_TRIM $optional.READ1_TRIM
#end if
#if $optional.READ2_MAX_BASES_TO_WRITE
--READ2_MAX_BASES_TO_WRITE $optional.READ2_MAX_BASES_TO_WRITE
#end if
#if $optional.READ2_TRIM
--READ2_TRIM $optional.READ2_TRIM
#end if

#if $optional.RG_TAG
--RG_TAG $optional.RG_TAG
#end if
#if $optional.SECOND_END_FASTQ_ON
--SECOND_END_FASTQ $SECOND_END_FASTQ
#end if

#if $optional.UNPAIRED_FASTQ
--UNPAIRED_FASTQ $optional.UNPAIRED_FASTQ
#end if

#include source=$picard_opts#
#include source=$picard_bam_input#
#include source=$log_opts#]]></command>
  <inputs>
    <expand macro="gatk_req_params"/>
    <expand macro="picard_params"/>
    <section expanded="False" name="optional" title="Optional Parameters">
      <param name="CLIPPING_ACTION" argument="--CLIPPING_ACTION" type="text" optional="true" value="" label="Clipping_Action" help="The action that should be taken with clipped reads: &amp;apos;X&amp;apos; means the reads and qualities should be trimmed at the clipped position; &amp;apos;N&amp;apos; means the bases should be changed to Ns in the clipped region; and any integer means that the base qualities should be set to that value in the clipped region."/>
      <param name="CLIPPING_ATTRIBUTE" argument="--CLIPPING_ATTRIBUTE" type="text" optional="true" value="" label="Clipping_Attribute" help="The attribute that stores the position at which the SAM record should be clipped"/>
      <param name="CLIPPING_MIN_LENGTH" argument="--CLIPPING_MIN_LENGTH" type="integer" optional="true" value="0" label="Clipping_Min_Length" help="When performing clipping with the CLIPPING_ATTRIBUTE and CLIPPING_ACTION parameters, ensure that the resulting reads after clipping are at least CLIPPING_MIN_LENGTH bases long. If the original read is shorter than CLIPPING_MIN_LENGTH then the original read length will be maintained."/>
      <param name="COMPRESS_OUTPUTS_PER_RG" argument="--COMPRESS_OUTPUTS_PER_RG" type="boolean" truevalue="--COMPRESS_OUTPUTS_PER_RG" falsevalue="" optional="true" checked="false" label="Compress_Outputs_Per_Rg" help="Compress output FASTQ files per read group using gzip and append a .gz extension to the file names."/>
      <param name="INCLUDE_NON_PF_READS" argument="--INCLUDE_NON_PF_READS" type="boolean" truevalue="--INCLUDE_NON_PF_READS" falsevalue="" optional="true" checked="false" label="Include_Non_Pf_Reads" help="Include non-PF reads from the SAM file into the output FASTQ files. PF means &amp;apos;passes filtering&amp;apos;. Reads whose &amp;apos;not passing quality controls&amp;apos; flag is set are non-PF reads. See GATK Dictionary for more info."/>
      <param name="INCLUDE_NON_PRIMARY_ALIGNMENTS" argument="--INCLUDE_NON_PRIMARY_ALIGNMENTS" type="boolean" truevalue="--INCLUDE_NON_PRIMARY_ALIGNMENTS" falsevalue="" optional="true" checked="false" label="Include_Non_Primary_Alignments" help="If true, include non-primary alignments in the output.  Support of non-primary alignments in SamToFastq is not comprehensive, so there may be exceptions if this is set to true and there are paired reads with non-primary alignments."/>
      <param name="INTERLEAVE" argument="--INTERLEAVE" type="boolean" truevalue="--INTERLEAVE" falsevalue="" optional="true" checked="false" label="Interleave" help="Will generate an interleaved fastq if paired, each line will have /1 or /2 to describe which end it came from"/>
      <param name="OUTPUT_DIR" argument="--OUTPUT_DIR" type="data" optional="true" format="" label="Output_Dir" help="Directory in which to output the FASTQ file(s).  Used only when OUTPUT_PER_RG is true."/>
      <param name="OUTPUT_PER_RG" argument="--OUTPUT_PER_RG" type="boolean" truevalue="--OUTPUT_PER_RG" falsevalue="" optional="true" checked="false" label="Output_Per_Rg" help="Output a FASTQ file per read group (two FASTQ files per read group if the group is paired)."/>
      <param name="QUALITY" argument="--QUALITY" type="integer" optional="true" value="" label="Quality" help="End-trim reads using the phred/bwa quality trimming algorithm and this quality."/>
      <param name="RE_REVERSE" argument="--RE_REVERSE" type="boolean" truevalue="--RE_REVERSE" falsevalue="" optional="true" checked="true" label="Re_Reverse" help="Re-reverse bases and qualities of reads with negative strand flag set before writing them to FASTQ"/>
      <param name="READ1_MAX_BASES_TO_WRITE" argument="--READ1_MAX_BASES_TO_WRITE" type="integer" optional="true" value="" label="Read1_Max_Bases_To_Write" help="The maximum number of bases to write from read 1 after trimming. If there are fewer than this many bases left after trimming, all will be written.  If this value is null then all bases left after trimming will be written."/>
      <param name="READ1_TRIM" argument="--READ1_TRIM" type="integer" optional="true" value="0" label="Read1_Trim" help="The number of bases to trim from the beginning of read 1."/>
      <param name="READ2_MAX_BASES_TO_WRITE" argument="--READ2_MAX_BASES_TO_WRITE" type="integer" optional="true" value="" label="Read2_Max_Bases_To_Write" help="The maximum number of bases to write from read 2 after trimming. If there are fewer than this many bases left after trimming, all will be written.  If this value is null then all bases left after trimming will be written."/>
      <param name="READ2_TRIM" argument="--READ2_TRIM" type="integer" optional="true" value="0" label="Read2_Trim" help="The number of bases to trim from the beginning of read 2."/>
      <param name="RG_TAG" argument="--RG_TAG" type="text" optional="true" value="PU" label="Rg_Tag" help="The read group tag (PU or ID) to be used to output a FASTQ file per read group."/>
      <param name="SECOND_END_FASTQ_ON" argument="--SECOND_END_FASTQ" type="boolean" checked="false" label="Second End Fastq?" help="Output FASTQ file (if paired, second end of the pair FASTQ)."/>
      <param name="UNPAIRED_FASTQ" argument="--UNPAIRED_FASTQ" type="data" optional="true" format="" label="Unpaired_Fastq" help="Output FASTQ file for unpaired reads; may only be provided in paired-FASTQ mode"/>
    </section>
  </inputs>
  <outputs>
    <expand macro="picard_output_params"/>
    <data name="FASTQ" format="fastqsanger" label="${tool.name} on ${on_string}: FASTQ"/>
    <data name="SECOND_END_FASTQ" format="fastqsanger" label="${tool.name} on ${on_string}: Second End">
      <filter>SECOND_END_FASTQ_ON</filter>
    </data>
    <expand macro="log_param"/>
  </outputs>
  <tests/>
  <help><![CDATA[Extracts read sequences and qualities from the input SAM/BAM file and
writes them into the output file in Sanger FASTQ format. . See `MAQ
FASTQ specification <http://maq.sourceforge.net/fastq.shtml>`__ for
details. This tool can be used by way of a pipe to run BWA MEM on
unmapped BAM (uBAM) files efficiently.

| In the RC mode (default is True), if the read is aligned and the
  alignment is to the reverse strand on the genome, the read's sequence
  from input sam file will be reverse-complemented prior to writing it
  to FASTQ in order restore correctly the original read sequence as it
  was generated by the sequencer.

Usage example:
^^^^^^^^^^^^^^

::

    java -jar picard.jar SamToFastq \
        I=input.bam \
        FASTQ=output.fastq
    

--------------
]]></help>
  <citations>
    <expand macro="citations"/>
  </citations>
</tool>
