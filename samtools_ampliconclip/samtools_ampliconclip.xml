<!--Updated from https://github.com/galaxyproject/tools-iuc/tree/main/tool_collections/samtools/samtools_ampliconclip-->
<tool id="samtools_ampliconclip" name="Samtools ampliconclip" version="@TOOL_VERSION@+galaxy0+1" profile="@PROFILE@">
    <description>clip primer bases from bam files</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <expand macro="version_command"/>
    <command><![CDATA[
        @ADDTHREADS@
        samtools ampliconclip
            $hard_clip_mode
            #if $fail:
                --fail $fail
            #end if
            #if $filt_len:
                --filter-len $filt_len
            #end if
            #if $fail_len:
                --fail-len $fail_len
            #end if
            #if $original:
                --original $original
            #end if
            #if $keep_tag:
                --keep-tag $keep_tag
            #end if
            --tolerance $tolerance
            #if $no_pg:
                --no-PG $no_pg
            #end if
            $strand
            -b '${input_bed}'
            -u
            $both_ends
            $no_excluded
            -@ \$addthreads
            '${input_bam}'
            | samtools collate -@ \$addthreads -O -u -
            | samtools fixmate -@ \$addthreads -u - - 
            | samtools sort -@ \$addthreads -m \${GALAXY_MEMORY_MB:-768}M -T "\${TMPDIR:-.}" -o '${output_bam}'
    ]]></command>
    <inputs>
        <param name="input_bed" type="data" format="bed" label="Genetic intervals (in BED format)" />
        <param name="input_bam" type="data" format="bam" label="BAM file" />
        <param name="hard_clip_mode" argument="--hard-clip" type="boolean" checked="false" truevalue="--hard-clip" falsevalue="--soft-clip" label="hard clip" help="hard clip (remove bases), unchekced = default soft-clipping" />
        <param name="both_ends" argument="--both-ends" type="boolean" checked="false" truevalue="--both-ends" falsevalue="" label="clip both ends of reads (false = 5' only)" />
        <param name="strand" argument="--strand" type="boolean" checked="false" truevalue="--strand" falsevalue="" label="only clip reads that match bed file strand annotation" />
        <param name="fail" argument="--fail" type="boolean" checked="false" truevalue="--original" falsevalue="" optional="true" label="Mark unclipped reads as QC fail." />
        <param name="filt_len" argument="--filter-len" type="integer" min="0" optional="true" label="do not output reads INT size or shorter" />
        <param name="fail_len" argument="--fail-len" type="integer" min="0" optional="true" label="As --filter-len but mark as QC fail rather then filter out." />
        <param name="no_excluded" argument="--no-excluded" type="boolean" checked="false" truevalue="--no-excluded" falsevalue="" label="Filter out any reads that are marked as QCFAIL or are unmapped. This works on the state of the reads before clipping takes place." />
        <param name="original" argument="--original" type="boolean" checked="false" truevalue="--original" falsevalue="" optional="true" label="Add an OA tag with the original data for clipped files." />
        <param name="keep_tag" argument="--keep-tag" type="boolean" checked="false" truevalue="--keep-tag" falsevalue="" optional="true" label="In clipped reads, keep the possibly invalid NM and MD tags" />
        <param name="tolerance" argument="--tolerance" type="integer" value="5" min="0"  label="Tolerance" help="match region within this number of bases, default 5." />
        <param name="no_pg" argument="--no-PG" type="boolean" checked="false" truevalue="--no-PG" falsevalue="" optional="true" label="Do not at a PG line to the header." />
    
    </inputs>
    <outputs>
        <data name="output_bam" format="bam" />
        <param name="rejects_file" argument="--rejects-file" type="data" format="bam" label="Write any filtered reads out to a file." />
    </outputs>
    <tests>
        <!-- 1) -->
        <test>
            <param name="input_bed" value="eboVir3.1.bed" ftype="bed" />
            <param name="input_bam" value="eboVir3.bam" ftype="bam" />
            <output name="output_bam" file="eboVir3.clipped.bam" ftype="bam" lines_diff="22" />
        </test>
        <!-- 2) testing strand -->
        <test>
            <param name="input_bed" value="eboVir3.1.bed" ftype="bed" />
            <param name="input_bam" value="eboVir3.bam" ftype="bam" />
            <param name="strand" value="--strand" />
            <output name="output_bam" file="eboVir3.clipped.strand.bam" ftype="bam" lines_diff="16" />
        </test>
        <!-- 3) testing hard clip-->
        <test>
            <param name="input_bed" value="eboVir3.1.bed" ftype="bed" />
            <param name="input_bam" value="eboVir3.bam" ftype="bam" />
            <param name="hard_clip_mode" value="--hard-clip" />
            <output name="output_bam" file="eboVir3.hardclipped.bam" ftype="bam" lines_diff="14" />
        </test>
        <!-- 4) testing strand and min length-->
        <test>
            <param name="input_bed" value="eboVir3.1.bed" ftype="bed" />
            <param name="input_bam" value="eboVir3.bam" ftype="bam" />
            <param name="min_length" value="30" />
            <param name="strand" value="--strand" />
            <param name="tolerance" value="6" />
            <param name="both_ends" value="--both-ends" />
            <param name="no_excluded" value="--no-excluded" />
            <output name="output_bam" file="eboVir3.clipped.strand_gt30.bam" ftype="bam" lines_diff="13" />
        </test>
        
    </tests>
    <help>
**What it does**
 Clips read alignments where they match BED file defined regions (e.g. for amplicon sequencing).

 samtools ampliconclip -b [INPUT BED] [INPUT BAM1] -o [OUTPUT]
    </help>
    <expand macro="citations"/>
</tool>
