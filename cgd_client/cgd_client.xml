<tool id="cgd_client" name="CGD Import Client" version="1.2.9.2" profile="16.01">

    <description>Send a pipeline output file to the CGD via cgd_client.jar.</description>

    <requirements>
        <requirement type="package" version="1.6.0">scipy</requirement>
        <requirement type="package" version="0.13.3">vcfpy</requirement>
        <requirement type="package" version="2.25.1">requests</requirement>
        <requirement type="package" version="0.2.6">tabix</requirement>
    </requirements>

    <version_command>python '$__tool_directory__/cgd_client.py' --version</version_command>

    <command detect_errors="exit_code"><![CDATA[
        #if $endpoint_choice.endpoint=="snpProfile"
            #if $endpoint_choice.pipeline_output
                #set datatype = $endpoint_choice.pipeline_output.datatype
                #if $endpoint_choice.pipeline_output.is_of_type("vcf_bgzip")
                    ln -s $endpoint_choice.pipeline_output profile.vcf.gz &&
                    tabix profile.vcf.gz &&
                #end if
            #end if
        #end if

        python '$__tool_directory__/cgd_client.py'
        --endpoint '$endpoint_choice.endpoint'
        --cgd_client '$cgd_client'
        --cgd_config '$cgd_config'
        $include_chr

        #if $servicebase:
            --servicebase $servicebase
        #end if

        #if $endpoint_choice.endpoint=="annotationcomplete"
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="completeRun"
            --runid $endpoint_choice.runid
        #end if

        #if $endpoint_choice.endpoint=="completeSampleRun"
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="samplesheet"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
        #end if

        #if $endpoint_choice.endpoint=="seattleseq"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
            --qcversion $endpoint_choice.qcversion
        #end if

        #if $endpoint_choice.endpoint=="none"
            --pipeline_out $endpoint_choice.pipeline_output
            --cgd_url $endpoint_choice.cgd_url
        #end if

        #if $endpoint_choice.endpoint=="geneqc"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="intervalqc"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="probeqc"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="uploadqcsheet"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="uploadqcsheetrtwo"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="illuminavcf"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="sequenceVariant"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="vcf"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
        #end if

        #if $endpoint_choice.endpoint=="splicevariant"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="genefusion"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="geneFusionReport"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="cnvpdf"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="cnvcalls"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="tumornormal"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="illuminadenovo"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="annotate"
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="annotateRun"
            --runid $endpoint_choice.runid
        #end if

        #if $endpoint_choice.endpoint=="annotateSampleRun"
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="updatesamplerun"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="metrics"
            --pipeline_out $endpoint_choice.pipeline_output
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

        #if $endpoint_choice.endpoint=="reportedvariants"
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
            --report_vcf $report_vcf
            --report_bed $report_bed
        #end if

        #if $endpoint_choice.endpoint=="snpProfile"
            #if $endpoint_choice.pipeline_output
                #set datatype = $endpoint_choice.pipeline_output.datatype
                #if $endpoint_choice.pipeline_output.is_of_type("vcf_bgzip")
                    --pipeline_out profile.vcf.gz
                #else
                    --pipeline_out $endpoint_choice.pipeline_output
                #end if
            #end if
            --runid $endpoint_choice.runid
            --barcodeid $endpoint_choice.barcodeid
        #end if

    ]]></command>

    <inputs>

        <param name="cgd_client" type="text" label="Location of cgd_client.jar" help="Ask John if you can't find it." />
        <param name="cgd_config" type="text" label="Location of cgd_client config properties." help="Most likely in same place as cgd_client." />
        <param name="servicebase" type="text" label="Service base" help="The service host name and port + service base. e.g. kdlwebprod02:8080/cgd" />
        <param name="include_chr" argument="--include_chr" type="boolean" truevalue="--include_chr" falsevalue="" optional="true" checked="false" label="Include chr prefix?" help="Include chr prefix in reported variant output files." />
        <conditional name="daisy_chain">
            <param name="accept_input" type="select" label="Accept Input?" >
                <option value="yes">Yes</option>
                <option value="no">No</option>
            </param>
            <when value="yes">
                <param name="dummy_input" type="data" format="data" label="Dummy Input File" />
            </when>
        </conditional>

        <conditional name="endpoint_choice">
            <param name="endpoint" type="select" label="Endpoint name." >
                <option value="annotate">Annotation (deprecated)</option>
                <option value="annotateRun">Request annotations on all samples in a run</option>
                <option value="annotateSampleRun">Request annotation on a single sample</option>
                <option value="annotationcomplete">All files have been sent to CGD (deprecated)</option>
                <option value="completeRun">Mark all samples in a run as complete</option>
                <option value="completeSampleRun">Mark a single sample as complete</option>
                <option value="cnvcalls">CNV Calls</option>
                <option value="cnvpdf">CNV PDF</option>
                <option value="genefusion">Gene Fusions</option>
                <option value="geneFusionReport">Gene Fusion Report</option>
                <option value="geneqc">Gene QC .tsv</option>
                <option value="illuminadenovo">de novo VCF (trio)</option>
                <option value="illuminavcf">Pipeline VCF</option>
                <option value="intervalqc">Exon QC .tsv</option>
                <option value="metrics">New Sample Metrics [json]</option>
                <option value="probeqc">Probe QC .tsv</option>
                <option value="reportedvariants">Reported Variants</option>
                <option value="samplesheet">SampleSheet</option>
                <option value="seattleseq">SeattleSeq .tsv</option>
                <option value="sequenceVariant">RNA Variants</option>
                <option value="snpProfile">SNP Profile</option>
                <option value="splicevariant">Splice Variants</option>
                <option value="tumornormal">Tumor Normal</option>
                <option value="updatesamplerun">Sample Metrics [json]</option>
                <option value="uploadqcsheet">FastQC R1</option>
                <option value="uploadqcsheetrtwo">FastQC R2</option>
                <option value="vcf">Multisample VCF</option>
                <option value="none">NONE</option>
            </param>

            <when value="annotate">
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="annotateRun">
                <param name="runid" type="text" label="Galaxy Run ID: " />
            </when>

            <when value="annotateSampleRun">
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="annotationcomplete">
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="completeRun">
                <param name="runid" type="text" label="Galaxy Run ID: " />
            </when>

            <when value="completeSampleRun">
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="geneqc">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="seattleseq">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
                <param name="qcversion" type="text" label="SeattleSeq version: " />
            </when>

            <when value="intervalqc">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="probeqc">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="uploadqcsheet">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="uploadqcsheetrtwo">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="samplesheet">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
            </when>

            <when value="illuminavcf">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="sequenceVariant">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="vcf">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
            </when>

            <when value="splicevariant">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="genefusion">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="geneFusionReport">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="updatesamplerun">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="metrics">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="snpProfile">
                <param name="pipeline_output" type="data" format="vcf,vcf_bgzip" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="reportedvariants">
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="cnvpdf">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="cnvcalls">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="tumornormal">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="illuminadenovo">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="runid" type="text" label="Galaxy Run ID: " />
                <param name="barcodeid" type="text" label="Barcode ID: " />
            </when>

            <when value="none">
                <param name="pipeline_output" type="data" format="data" label="Pipeline output to send to CGD." />
                <param name="cgd_url" type="text" label="CGD URL: " />
            </when>

        </conditional>

    </inputs>

    <outputs>
        <data format="txt" name="output" label="Status of transfer to CGD endpoint." from_work_dir="stdout_log"/>
        <data format="vcf" name="report_vcf" label="reportedvariants endpoint VCF" >
            <filter>endpoint_choice['endpoint'] == 'reportedvariants'</filter>
        </data>
        <data format="bed" name="report_bed" label="reportedvariants endpoint BED" >
            <filter>endpoint_choice['endpoint'] == 'reportedvariants'</filter>
        </data>
        <data format="json" name="profile_json" label="snpProfile profile JSON" from_work_dir="cgd_profile_to_send.json" >
            <filter>endpoint_choice['endpoint'] == 'snpProfile'</filter>
        </data>
    </outputs>

    <help><![CDATA[
Usage: java -jar cgd_client-1.2.9.jar
                [(-c|--config) <config>] [(-f|--file) <file>] [(-j|--jsonfile) <jsonfile>] [(-u|--url) <url>] [(-s|--servicebase) <servicebase>] [(-r|--runid) <runid>] [(-n|--name) <name>] [(-b|--barcodeid) <barcodeid>] [(-v|--version) <version>] [-d|--debug] [-p|--programversion]

  [(-c|--config) <config>]
        The path to the external configuration file. Defaults to
        ./cgd_client.properties

  [(-f|--file) <file>]
        POST a multipart form data request, with this file at this path as an
        attribute in the body.

  [(-j|--jsonfile) <jsonfile>]
        POST a JSON request, with the contents of the file at this path as the
        body.

  [(-u|--url) <url>]
        The full unc path to the REST endpoint. Bypasses any config settings.
        Useful for testing or reaching services that have not been defined in
        the config.

  [(-s|--servicebase) <servicebase>]
        The service host name and port + service base. e.g.
        kdlwebprod02:8080/cgd

  [(-r|--runid) <runid>]
        The Galaxy RunID for this workflow job

  [(-n|--name) <name>]
        The endpoint or interface name that is mapped to a url in the properties
        files. See documentation for list of endpoint names or look at the
        config.

  [(-b|--barcodeid) <barcodeid>]
        The DNA Barcode ID

  [(-v|--version) <version>]
        The version of the qc sheet.

  [-d|--debug]
        Sends verbose logging to output configured by log4j.

  [-p|--programversion]
        Prints the version of this jar to the console / stdout

Support URL: https://bridge.ohsu.edu/cs/itg/projects/kdl-genomics/Genimics%20Data%20Wiki/CGD%20Client.aspx
    ]]></help>

</tool>

