<tool id="cnvkit_batch" name="CNVkit Batch" version="@VERSION@.0" profile="17.09">
    <description>CNVkit, a command-line toolkit for copy number analysis.</description>

    <macros>
        <import>macros.xml</import>
    </macros>

    @VERSION_CMD@

    <requirements>
      <requirement type="package" version="0.9.4a0">cnvkit</requirement>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[
        @CMD_BEGIN@ scatter 

        #if $segments.include_segements:
        --segment ${segements.segment_file}
        #if $segments.color.specify_color:
        --segment-color $segments.color.color
        #end if
        #end if

        #if $restrict_analysis.restrict_to == "chromosome":
        --chromosome ${restrict_analysis.chromosome}
        #else if $restrict_analysis.restrict_to == "region":
        --chromosome ${restrict_analysis.chromosome}:${restrict_analysis.start_idx}-${restrict_analysis.end_idx}
        #end if

        #if $genes.by_genes:
        --gene ${genes.names}
        #end if

        ## Range List?

        #if $width.specify_width:
        --width ${width.width}
        #end if
        
        ## Output

        #if $plot.antitarget.specify_antitarget
        --antitarget-marker ${plot.antitarget.character}
        #end if

        #if $plot.by_bit
        --by-bin
        #end if

        #if $plot.title.specify_title 
        --title ${plot.title.title} 
        #end if

        #if $plot.trendline
        --trend
        #end if

        #if $plot.plot_max.specify_max:
        --y-max ${plot.plot_max.max}
        #end if

        #if $plot.plot_min.specify_min:
        --y-min ${plot.plot_min.min}
        #end if

        #if $SNP.vcf.use_vcf
        --vcf ${SNP.vcf.vcf_file}
        #if $SNP.vcf.sample.specify_id
        --sample-id ${SNP.vcf.sample.id}
        #end if
        #if $SNP.vcf.normal.specify_id
        --sample-id ${SNP.vcf.normal.id}
        #end if 
        #if $SNP.vcf.min_depth.specify_depth
        --min-variant-depth ${SNP.vcf.min_depth.depth}
        #end if 
        #if $SNP.vcf.zygosity.infer
        --zygosity-freq ${SNP.vcf.zygosity.freq}
        #end if
        #end if

	    --rlibpath=/home/exacloud/lustre1/galaxy/galaxy/database/dependencies/_conda/envs/__cnvkit@0.9.4a0/lib/R/library
    ]]></command>

    <inputs>
        <param name="calls" type="data" format="tsv" multiple="false" label="CNR File"/>
        <conditional name="segments">
            <param name="include_segments" type="boolean" label="Include Segments"/>
            <when value="true">
                <param name="segment_file" type="data" format="tsv" multiple="false" label="Segments"/>

                <conditional name="color">
                    <param name="specify_color" type="boolean" label="Specify Segment Color"/>
                    <when value="true">
                        <param name="color" type="text" label="Color"/>
                    </when>
                </conditional>

            </when>
        </conditional>
        
        <conditional name="restrict_analysis">
            <param name="restrict_to" type="select" label="Restrict Analysis">
                <option value="whole">Whole</option>
                <option value="chromosome">Chromosome</option>
                <option value="region">Region</option>
            </param>
            <when value="whole">
            </when>
            <when value="chromosome">
                <param name="chromosome" type="text" label="Chromosome"/>
            </when>
            <when value="region">
                <param name="chromosome" type="text" label="Chromosome"/>
                <param name="start_idx" type="integer" label="Region starting index (inclusive)"/>
                <param name="end_idx" types="integer" label="Region ending index (exclusive)"/>
            </when>
        </conditional>

        <conditional name="genes">
            <param name="by_genes" type="boolean"  label="Genes by Name"/>
            <when value="true">
                <param name="names" type="text" label="Gene Names" help="Provide a comma separated list of gene names"/>
            </when>
        </conditional>

        <conditional name="width">
            <param name="specify_width" type="boolean" label="Specify Width"/>
            <when value="true">
                <param name="width" type="integer" label="Width"/>
            </when>
        </conditional>

        <section name="plot" title="Plot Options" expanded="false">
            <conditional name="antitarget">35
                <param name="specify_antitarget" type="boolean" label="Antitargets"/>
                <when value="true">
                    <param name="character" type="text" label="Antitarget Label"/>
                </when>
            </conditional>

            <param name="by_bin" type="boolean" name="Plot By Bin"/>

            <conditional name="title">
                <param name="specify_title" type="boolean" label="Specify Title"/>
                <when value="true">
                    <param name="title" type="text" label="Plot Title"/>
                </when>
            </conditional>

            <param name="trendline" type="boolean" label="Include Trendline"/>

            <conditional name="plot_min">
                <param name="specify_min" type="boolean" label="Specify Plot Minimum"/>
                <when value="true">
                    <param name="min" type="integer" label="Minimum value"/>
                </when>
            </conditional>

            <conditional name="plot_max">
                <param name="specify_max" type="boolean" label="Specify Plot Maximum"/>
                <when value="true">
                    <param name="max" type="integer" label="Maximum value"/>
                </when>
            </conditional>
        </section>

        <section name="SNP" title="SNV b-Allele Frequencies" expanded="false">
            <conditional name="vcf">
                <param name="use_vcf" type="boolean" label="Use VCF File"/>
                <when value="true">
                    <param name="vcf_file" type="data" format="tsv" label="VCF File"/>

                    <conditional name="sample">
                        <param name="specify_id" type="boolean" label="Specify Sample ID"/>
                        <when value="true">
                            <param name="id" type="text" label="Sample ID"/>
                        </when>
                    </conditional> 

                    <conditional name="normal">
                        <param name="specify_id" type="boolean" label="Specify Normal ID"/>
                        <when value="true">
                            <param name="id" type="text" label="Normal ID"/>
                        </when>
                    </conditional>

                    <conditional name="min_depth">
                        <param name="specify_depth" type="boolean" label="Specify Minimum Read Depth" help="Used in the b-allele frequency calculation. Default 20."/>
                        <when value="true">
                            <param value="depth" type="integer" label="Minimum Read Depth"/>
                        </when>
                    </conditional>

                    <conditional name="zygosity">
                        <param name="infer" type="boolean" label="Infer Zygosity"/>
                        <when value="true">
                            <param name="freq" type="float" label="Value" option="true"/>
                        </when>
                    </conditional>
                </when>
            </conditional>
        </section>

    </inputs>

    <outputs>
        <collection type="list"  name="output_diagram" label="${tool.name} on ${on_string}: Diagram">
            <discover_datasets pattern="(?P&lt;designation&gt;.+)-diagram\.pdf" format="pdf" visible="false"/>
        </collection>
        <collection type="list" name="output_cnr" label="${tool.name} on ${on_string}: CNR">
            <discover_datasets pattern="(?P&lt;designation&gt;.+)\.cnr" format="tsv" visible="false"/>
        </collection>
        <collection type="list" name="output_cns" label="${tool.name} on ${on_string}: CNS">
            <discover_datasets pattern="(?P&lt;designation&gt;.+)\.cns" format="tsv" visible="false"/>
        </collection>
        <collection type="list" name="output_scatter" label="${tool.name} on ${on_string}: Scatter">
            <discover_datasets pattern="(?P&lt;designation&gt;.+)-scatter\.pdf" format="pdf" visible="false"/>
        </collection>
        <data format="tsv" name="output_ref" label="${tool.name} on ${on_string}: Reference CNN">
            <filter>cnn_ref_type['cnn_ref_type_selector'] == "build"</filter>
        </data>
    </outputs>

    <help><![CDATA[
usage: cnvkit.py scatter [-h] [-s FILENAME] [-c RANGE] [-g GENE]
                         [-l RANGE_LIST] [-w WIDTH] [-o FILENAME]
                         [-a CHARACTER] [--by-bin]
                         [--segment-color SEGMENT_COLOR] [--title TITLE] [-t]
                         [--y-max Y_MAX] [--y-min Y_MIN] [-v FILENAME]
                         [-i SAMPLE_ID] [-n NORMAL_ID] [-m MIN_VARIANT_DEPTH]
                         [-z [ALT_FREQ]]
                         [filename]

positional arguments:
  filename              Processed bin-level copy ratios (*.cnr), the output of
                        the 'fix' sub-command.

optional arguments:
  -h, --help            show this help message and exit
  -s FILENAME, --segment FILENAME
                        Segmentation calls (.cns), the output of the 'segment'
                        command.
  -c RANGE, --chromosome RANGE
                        Chromosome or chromosomal range, e.g. 'chr1' or
                        'chr1:2333000-2444000', to display. If a range is
                        given, all targeted genes in this range will be shown,
                        unless -g/--gene is also given.
  -g GENE, --gene GENE  Name of gene or genes (comma-separated) to display.
  -l RANGE_LIST, --range-list RANGE_LIST
                        File listing the chromosomal ranges to display, as
                        BED, interval list or 'chr:start-end' text. Creates
                        focal plots similar to -c/--chromosome for each listed
                        region, combined into a multi-page PDF. The output
                        filename must also be specified (-o/--output).
  -w WIDTH, --width WIDTH
                        Width of margin to show around the selected gene(s)
                        (-g/--gene) or small chromosomal region
                        (-c/--chromosome). [Default: 1000000]
  -o FILENAME, --output FILENAME
                        Output PDF file name.

Plot aesthetics:
  -a CHARACTER, --antitarget-marker CHARACTER
                        Plot antitargets using this symbol when plotting in a
                        selected chromosomal region (-g/--gene or
                        -c/--chromosome). [Default: same as targets]
  --by-bin              Plot data x-coordinates by bin indices instead of
                        genomic coordinates. All bins will be shown with equal
                        width, no blank regions will be shown, and x-axis
                        values indicate bin number (within chromosome) instead
                        of genomic position.
  --segment-color SEGMENT_COLOR
                        Plot segment lines in this color. Value can be any
                        string accepted by matplotlib, e.g. 'red' or
                        '#CC0000'.
  --title TITLE         Plot title. [Default: sample ID, from filename or -i]
  -t, --trend           Draw a smoothed local trendline on the scatter plot.
  --y-max Y_MAX         y-axis upper limit.
  --y-min Y_MIN         y-axis lower limit.

To plot SNP b-allele frequencies:
  -v FILENAME, --vcf FILENAME
                        VCF file name containing variants to plot for SNV
                        b-allele frequencies.
  -i SAMPLE_ID, --sample-id SAMPLE_ID
                        Name of the sample in the VCF to use for b-allele
                        frequency extraction and as the default plot title.
  -n NORMAL_ID, --normal-id NORMAL_ID
                        Corresponding normal sample ID in the input VCF. This
                        sample is used to select only germline SNVs to plot.
  -m MIN_VARIANT_DEPTH, --min-variant-depth MIN_VARIANT_DEPTH
                        Minimum read depth for a SNV to be used in the
                        b-allele frequency calculation. [Default: 20]
  -z [ALT_FREQ], --zygosity-freq [ALT_FREQ]
                        Ignore VCF's genotypes (GT field) and instead infer
                        zygosity from allele frequencies. [Default if used
                        without a number: 0.25]
    ]]></help>

    <expand macro="citations" />

</tool>
